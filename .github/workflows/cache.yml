name: "update cache"

on:
  workflow_run:
    workflows: ["tests are"]
    types: [completed]
    branches: [main]

jobs:
  # For single user this isn't a big deal. Hopefully not a deal breaker for
  # multi-user.
  list-users:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
      with:
        ref: main
    - id: set-matrix
      run: |
        matrix=$(ls nix/home/users/*.nix | xargs basename -s .nix | jq -R -s -c 'split("\n")[:-1]')
        echo $matrix # Sanity check
        echo "::set-output name=matrix::$matrix"

  # For each user, build each system.
  build:
    runs-on: ubuntu-latest
    needs: list-users
    strategy:
      matrix:
        users: ${{ fromJson(needs.list-users.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v3
      with:
        ref: main
    # 1) create a https://app.cachix.org account
    # 2) make a cache called <username> (or whatever, but update accordingly): https://app.cachix.org/cache
    # 3) create an auth token: https://app.cachix.org/cache/<username>/settings/authtokens
    # 4) add the CACHIX_TOKEN: https://github.com/<username>/.dots/settings/secrets/actions/new
    - name: "provision home-mananger"
      uses: ./.github/actions/runner
      id: runner
      with:
        user: ${{ matrix.users }}
        cachix-endpoint: "${{ github.repository_owner }}"
        cachix-token: '${{ secrets.CACHIX_TOKEN }}'

    - name: "build and cache systems"
      if: ${{ success() }}
      run: |
        for config in $(nix eval --raw ".#_configs"); do
          nix build --json ".#nixosConfigurations.$config.config.system.build.toplevel" \
            | jq -r '(.[]|.outputs|.out)' | cachix push $GITHUB_REPOSITORY_OWNER;
        done

    - name: "build and cache dots-manager"
      if: ${{ success() }}
      run: |
        nix build --json "./dots-manager#" | jq -r '(.[]|.outputs|.out)' | cachix push $GITHUB_REPOSITORY_OWNER;
